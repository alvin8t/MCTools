"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.createBlockmap = exports.appendBlockmap = exports.BLOCK_MAP_FILE_SUFFIX = undefined;

var _bluebirdLst;

function _load_bluebirdLst() {
    return _bluebirdLst = require("bluebird-lst");
}

let appendBlockmap = exports.appendBlockmap = (() => {
    var _ref = (0, (_bluebirdLst || _load_bluebirdLst()).coroutine)(function* (file) {
        return JSON.parse((yield (0, (_util || _load_util()).exec)((yield getBlockMapTool()), ["-in", file, "-compression", "deflate"])));
    });

    return function appendBlockmap(_x) {
        return _ref.apply(this, arguments);
    };
})();

let createBlockmap = exports.createBlockmap = (() => {
    var _ref2 = (0, (_bluebirdLst || _load_bluebirdLst()).coroutine)(function* (file, target, packager, safeArtifactName) {
        const blockMapFile = `${file}${BLOCK_MAP_FILE_SUFFIX}`;
        const updateInfo = JSON.parse((yield (0, (_util || _load_util()).exec)((yield getBlockMapTool()), ["-in", file, "-out", blockMapFile])));
        packager.info.dispatchArtifactCreated({
            file: blockMapFile,
            safeArtifactName: `${safeArtifactName}${BLOCK_MAP_FILE_SUFFIX}`,
            target,
            arch: null,
            packager,
            updateInfo
        });
        return updateInfo;
    });

    return function createBlockmap(_x2, _x3, _x4, _x5) {
        return _ref2.apply(this, arguments);
    };
})();
//# sourceMappingURL=differentialUpdateInfoBuilder.js.map


exports.createNsisWebDifferentialUpdateInfo = createNsisWebDifferentialUpdateInfo;
exports.configureDifferentialAwareArchiveOptions = configureDifferentialAwareArchiveOptions;

var _util;

function _load_util() {
    return _util = require("builder-util/out/util");
}

var _path = _interopRequireWildcard(require("path"));

var _tools;

function _load_tools() {
    return _tools = require("./tools");
}

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

const BLOCK_MAP_FILE_SUFFIX = exports.BLOCK_MAP_FILE_SUFFIX = ".blockmap";
function createNsisWebDifferentialUpdateInfo(artifactPath, packageFiles) {
    if (packageFiles == null) {
        return null;
    }
    const keys = Object.keys(packageFiles);
    if (keys.length <= 0) {
        return null;
    }
    const packages = {};
    for (const arch of keys) {
        const packageFileInfo = packageFiles[arch];
        packages[arch] = Object.assign({}, packageFileInfo, { path: _path.basename(packageFileInfo.path) });
    }
    return { packages };
}
function configureDifferentialAwareArchiveOptions(archiveOptions) {
    /*
     * dict size 64 MB: Full: 33,744.88 KB, To download: 17,630.3 KB (52%)
     * dict size 16 MB: Full: 33,936.84 KB, To download: 16,175.9 KB (48%)
     * dict size  8 MB: Full: 34,187.59 KB, To download:  8,229.9 KB (24%)
     * dict size  4 MB: Full: 34,628.73 KB, To download: 3,782.97 KB (11%)
        as we can see, if file changed in one place, all block is invalidated (and update size approximately equals to dict size)
     */
    archiveOptions.dictSize = 4;
    // do not allow to change compression level to avoid different packages
    archiveOptions.compression = "normal";
    return archiveOptions;
}
function getBlockMapTool() {
    // noinspection SpellCheckingInspection
    return (0, (_tools || _load_tools()).getTool)({
        repository: "develar/block-map-builder",
        name: "block-map-builder",
        version: "0.2.0",
        mac: "J+aspHER9Hba70oDJAg9ZUyr5KC8beTjIedMQRgrdsWd5Qlc+0COy+zXMw7Pcq+hqDvsEFoM2N4Yx6wQAaXDXA==",
        "linux-ia32": "2zkhj4GVvLg8JDsGIDc4CUeZ+eHxwPchNuub+FTjO98YJyCIKDItJorfTStoZe4qlYqCE1tAX7Q/NXmBvpwj6A==",
        "linux-x64": "2iErpiWfSMWMMFALd2sIcfU7cd4mFc96EzA/6j9/XCAx0Z6y6vSJinwjMlcemN2SUUsyVkUnHkinCLK7M34GXQ==",
        "win-ia32": "QH/b+cmbsPtyaGzKriNGQtvKQ0KEUictieprGgcP7s4flHDXcsO+WtkecZpuJn5m3VLR0dGeSOw/oDxGxszBZA==",
        "win-x64": "GMT7M9IibT8v5OY45N7Ar97rHpBcc9HexUGGePnzkv++4Dh7DjIlEeo/Q50MRRkp6pdgIrkG1OawEbJIt2DkLw=="
    });
}